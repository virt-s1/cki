---
- hosts: guest

  tasks:
    - name: copy ltp skip case file to /opt/ltp
      copy:
        src: skip.ltp
        dest: /opt/ltp
      become: yes

    - name: clean results and output folders
      file:
        path: "/opt/ltp/{{ item }}"
        state: absent
      loop:
        - results
        - output
      become: yes

    - name: run ltp test
      command: "./runltp -p -q -f {{ item }} -o {{ instance_type }}-{{ item }}.console -l {{ instance_type }}-{{ item }}.result -S skip.ltp"
      become: yes
      become_user: root
      args:
        chdir: /opt/ltp/
      loop:
        - hyperthreading
        - commands
        - connectors
        - crypto
        - dio
        - fs
        - fs_bind
        - fs_perms_simple
        - fsx
        - input
        - ipc
        - math
        - mm
        - nptl
        - power_management_tests
        - sched
        - uevent
        - net.tcp_cmds
        - net.ipv6
        - net_stress.interface
      register: ltp_results
      ignore_errors: True

    - name: set result FAIL by default
      set_fact:
        ltp_result: "FAIL"

    - name: set result PASS if all tests passed
      set_fact:
        ltp_result: "PASS"
      when: ltp_results is succeeded

    - name: fetch log and result folder back
      ansible.posix.synchronize:
        mode: pull
        src: "/opt/ltp/{{ item }}"
        dest: "{{ playbook_dir }}"
      loop:
        - results
        - output

    - name: write ltp report
      template:
        src: ltp_report.j2
        dest: "{{ instance_type }}.{{ arch }}-ltp.report"
      delegate_to: localhost

    - name: write result to ltp.result file
      copy:
        content: "{{ ltp_result }}"
        dest: ltp.result
      delegate_to: localhost

    - name: fail the test because ltp test failed
      fail:
        msg: ltp test failed
      when: ltp_results is failed
